Notes from VAPlugin:

	/*
	// Get the base directory of this plugin
	FString BaseDir = IPluginManager::Get().FindPlugin("VAPlugin")->GetBaseDir();

	// Add on the relative location of the third party dll and load it
	FString LibraryPath;
#if PLATFORM_WINDOWS
	LibraryPath = FPaths::Combine(*BaseDir, TEXT("Binaries/ThirdParty/VAPluginLibrary/Win64/ExampleLibrary.dll"));
#elif PLATFORM_MAC
    LibraryPath = FPaths::Combine(*BaseDir, TEXT("Source/ThirdParty/VAPluginLibrary/Mac/Release/libExampleLibrary.dylib"));
#endif // PLATFORM_WINDOWS

	ExampleLibraryHandle = !LibraryPath.IsEmpty() ? FPlatformProcess::GetDllHandle(*LibraryPath) : nullptr;

	if (ExampleLibraryHandle)
	{
		// Call the test function in the third party library that opens a message box
		ExampleLibraryFunction();
	}
	else
	{
		FMessageDialog::Open(EAppMsgType::Ok, LOCTEXT("ThirdPartyLibraryError", "Failed to load example third party library"));
	}
	*/

	/*
	moduleManager = &FModuleManager::Get();
	EModuleLoadResult failureReason;
	moduleInterface = moduleManager->LoadModuleWithFailureReason("VALibrary", failureReason);
	if (failureReason == EModuleLoadResult::Success) {
		UE_LOG(LogTemp, Warning, TEXT("Loaded VALibrary"));
	}
	else {
		UE_LOG(LogTemp, Warning, TEXT("Failed loading VALibrary"));
	}
	*/

	/*
	libDir zu konfi

	if (!LoadDependency(LibDir, TEXT("libvlc"), LibHandle)) {
		return false;
	}
	*/

####################

In Shutdown:

	/*
	// Free the dll handle
	FPlatformProcess::FreeDllHandle(ExampleLibraryHandle);
	ExampleLibraryHandle = nullptr;
	*/